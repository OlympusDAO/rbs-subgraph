// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CushionFactorChanged extends ethereum.Event {
  get params(): CushionFactorChanged__Params {
    return new CushionFactorChanged__Params(this);
  }
}

export class CushionFactorChanged__Params {
  _event: CushionFactorChanged;

  constructor(event: CushionFactorChanged) {
    this._event = event;
  }

  get cushionFactor_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CushionParamsChanged extends ethereum.Event {
  get params(): CushionParamsChanged__Params {
    return new CushionParamsChanged__Params(this);
  }
}

export class CushionParamsChanged__Params {
  _event: CushionParamsChanged;

  constructor(event: CushionParamsChanged) {
    this._event = event;
  }

  get duration_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get debtBuffer_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get depositInterval_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RegenParamsChanged extends ethereum.Event {
  get params(): RegenParamsChanged__Params {
    return new RegenParamsChanged__Params(this);
  }
}

export class RegenParamsChanged__Params {
  _event: RegenParamsChanged;

  constructor(event: RegenParamsChanged) {
    this._event = event;
  }

  get wait_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get threshold_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get observe_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReserveFactorChanged extends ethereum.Event {
  get params(): ReserveFactorChanged__Params {
    return new ReserveFactorChanged__Params(this);
  }
}

export class ReserveFactorChanged__Params {
  _event: ReserveFactorChanged;

  constructor(event: ReserveFactorChanged) {
    this._event = event;
  }

  get reserveFactor_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Swap extends ethereum.Event {
  get params(): Swap__Params {
    return new Swap__Params(this);
  }
}

export class Swap__Params {
  _event: Swap;

  constructor(event: Swap) {
    this._event = event;
  }

  get tokenIn_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenOut_(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountOut_(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Operator__configResultValue0Struct extends ethereum.Tuple {
  get cushionFactor(): BigInt {
    return this[0].toBigInt();
  }

  get cushionDuration(): BigInt {
    return this[1].toBigInt();
  }

  get cushionDebtBuffer(): BigInt {
    return this[2].toBigInt();
  }

  get cushionDepositInterval(): BigInt {
    return this[3].toBigInt();
  }

  get reserveFactor(): BigInt {
    return this[4].toBigInt();
  }

  get regenWait(): BigInt {
    return this[5].toBigInt();
  }

  get regenThreshold(): BigInt {
    return this[6].toBigInt();
  }

  get regenObserve(): BigInt {
    return this[7].toBigInt();
  }
}

export class Operator__requestPermissionsResultRequestsStruct extends ethereum.Tuple {
  get keycode(): Bytes {
    return this[0].toBytes();
  }

  get funcSelector(): Bytes {
    return this[1].toBytes();
  }
}

export class Operator__statusResultValue0Struct extends ethereum.Tuple {
  get low(): Operator__statusResultValue0LowStruct {
    return changetype<Operator__statusResultValue0LowStruct>(this[0].toTuple());
  }

  get high(): Operator__statusResultValue0HighStruct {
    return changetype<Operator__statusResultValue0HighStruct>(
      this[1].toTuple(),
    );
  }
}

export class Operator__statusResultValue0LowStruct extends ethereum.Tuple {
  get count(): BigInt {
    return this[0].toBigInt();
  }

  get lastRegen(): BigInt {
    return this[1].toBigInt();
  }

  get nextObservation(): BigInt {
    return this[2].toBigInt();
  }

  get observations(): Array<boolean> {
    return this[3].toBooleanArray();
  }
}

export class Operator__statusResultValue0HighStruct extends ethereum.Tuple {
  get count(): BigInt {
    return this[0].toBigInt();
  }

  get lastRegen(): BigInt {
    return this[1].toBigInt();
  }

  get nextObservation(): BigInt {
    return this[2].toBigInt();
  }

  get observations(): Array<boolean> {
    return this[3].toBooleanArray();
  }
}

export class Operator extends ethereum.SmartContract {
  static bind(address: Address): Operator {
    return new Operator("Operator", address);
  }

  ONE_HUNDRED_PERCENT(): BigInt {
    let result = super.call(
      "ONE_HUNDRED_PERCENT",
      "ONE_HUNDRED_PERCENT():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_ONE_HUNDRED_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ONE_HUNDRED_PERCENT",
      "ONE_HUNDRED_PERCENT():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ONE_PERCENT(): BigInt {
    let result = super.call("ONE_PERCENT", "ONE_PERCENT():(uint32)", []);

    return result[0].toBigInt();
  }

  try_ONE_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ONE_PERCENT", "ONE_PERCENT():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ROLES(): Address {
    let result = super.call("ROLES", "ROLES():(address)", []);

    return result[0].toAddress();
  }

  try_ROLES(): ethereum.CallResult<Address> {
    let result = super.tryCall("ROLES", "ROLES():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  active(): boolean {
    let result = super.call("active", "active():(bool)", []);

    return result[0].toBoolean();
  }

  try_active(): ethereum.CallResult<boolean> {
    let result = super.tryCall("active", "active():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auctioneer(): Address {
    let result = super.call("auctioneer", "auctioneer():(address)", []);

    return result[0].toAddress();
  }

  try_auctioneer(): ethereum.CallResult<Address> {
    let result = super.tryCall("auctioneer", "auctioneer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  callback(): Address {
    let result = super.call("callback", "callback():(address)", []);

    return result[0].toAddress();
  }

  try_callback(): ethereum.CallResult<Address> {
    let result = super.tryCall("callback", "callback():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  config(): Operator__configResultValue0Struct {
    let result = super.call(
      "config",
      "config():((uint32,uint32,uint32,uint32,uint32,uint32,uint32,uint32))",
      [],
    );

    return changetype<Operator__configResultValue0Struct>(result[0].toTuple());
  }

  try_config(): ethereum.CallResult<Operator__configResultValue0Struct> {
    let result = super.tryCall(
      "config",
      "config():((uint32,uint32,uint32,uint32,uint32,uint32,uint32,uint32))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Operator__configResultValue0Struct>(value[0].toTuple()),
    );
  }

  configureDependencies(): Array<Bytes> {
    let result = super.call(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      [],
    );

    return result[0].toBytesArray();
  }

  try_configureDependencies(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  fullCapacity(high_: boolean): BigInt {
    let result = super.call("fullCapacity", "fullCapacity(bool):(uint256)", [
      ethereum.Value.fromBoolean(high_),
    ]);

    return result[0].toBigInt();
  }

  try_fullCapacity(high_: boolean): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fullCapacity", "fullCapacity(bool):(uint256)", [
      ethereum.Value.fromBoolean(high_),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAmountOut(tokenIn_: Address, amountIn_: BigInt): BigInt {
    let result = super.call(
      "getAmountOut",
      "getAmountOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(tokenIn_),
        ethereum.Value.fromUnsignedBigInt(amountIn_),
      ],
    );

    return result[0].toBigInt();
  }

  try_getAmountOut(
    tokenIn_: Address,
    amountIn_: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAmountOut",
      "getAmountOut(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(tokenIn_),
        ethereum.Value.fromUnsignedBigInt(amountIn_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isActive(): boolean {
    let result = super.call("isActive", "isActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isActive", "isActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kernel(): Address {
    let result = super.call("kernel", "kernel():(address)", []);

    return result[0].toAddress();
  }

  try_kernel(): ethereum.CallResult<Address> {
    let result = super.tryCall("kernel", "kernel():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ohm(): Address {
    let result = super.call("ohm", "ohm():(address)", []);

    return result[0].toAddress();
  }

  try_ohm(): ethereum.CallResult<Address> {
    let result = super.tryCall("ohm", "ohm():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ohmDecimals(): i32 {
    let result = super.call("ohmDecimals", "ohmDecimals():(uint8)", []);

    return result[0].toI32();
  }

  try_ohmDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("ohmDecimals", "ohmDecimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  requestPermissions(): Array<Operator__requestPermissionsResultRequestsStruct> {
    let result = super.call(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      [],
    );

    return result[0].toTupleArray<Operator__requestPermissionsResultRequestsStruct>();
  }

  try_requestPermissions(): ethereum.CallResult<
    Array<Operator__requestPermissionsResultRequestsStruct>
  > {
    let result = super.tryCall(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Operator__requestPermissionsResultRequestsStruct>(),
    );
  }

  reserve(): Address {
    let result = super.call("reserve", "reserve():(address)", []);

    return result[0].toAddress();
  }

  try_reserve(): ethereum.CallResult<Address> {
    let result = super.tryCall("reserve", "reserve():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserveDecimals(): i32 {
    let result = super.call("reserveDecimals", "reserveDecimals():(uint8)", []);

    return result[0].toI32();
  }

  try_reserveDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "reserveDecimals",
      "reserveDecimals():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  status(): Operator__statusResultValue0Struct {
    let result = super.call(
      "status",
      "status():(((uint32,uint48,uint32,bool[]),(uint32,uint48,uint32,bool[])))",
      [],
    );

    return changetype<Operator__statusResultValue0Struct>(result[0].toTuple());
  }

  try_status(): ethereum.CallResult<Operator__statusResultValue0Struct> {
    let result = super.tryCall(
      "status",
      "status():(((uint32,uint48,uint32,bool[]),(uint32,uint48,uint32,bool[])))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Operator__statusResultValue0Struct>(value[0].toTuple()),
    );
  }

  swap(tokenIn_: Address, amountIn_: BigInt, minAmountOut_: BigInt): BigInt {
    let result = super.call("swap", "swap(address,uint256,uint256):(uint256)", [
      ethereum.Value.fromAddress(tokenIn_),
      ethereum.Value.fromUnsignedBigInt(amountIn_),
      ethereum.Value.fromUnsignedBigInt(minAmountOut_),
    ]);

    return result[0].toBigInt();
  }

  try_swap(
    tokenIn_: Address,
    amountIn_: BigInt,
    minAmountOut_: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "swap",
      "swap(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(tokenIn_),
        ethereum.Value.fromUnsignedBigInt(amountIn_),
        ethereum.Value.fromUnsignedBigInt(minAmountOut_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get kernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get auctioneer_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get callback_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokens_(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get configParams(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateCall extends ethereum.Call {
  get inputs(): ActivateCall__Inputs {
    return new ActivateCall__Inputs(this);
  }

  get outputs(): ActivateCall__Outputs {
    return new ActivateCall__Outputs(this);
  }
}

export class ActivateCall__Inputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class ActivateCall__Outputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class BondPurchaseCall extends ethereum.Call {
  get inputs(): BondPurchaseCall__Inputs {
    return new BondPurchaseCall__Inputs(this);
  }

  get outputs(): BondPurchaseCall__Outputs {
    return new BondPurchaseCall__Outputs(this);
  }
}

export class BondPurchaseCall__Inputs {
  _call: BondPurchaseCall;

  constructor(call: BondPurchaseCall) {
    this._call = call;
  }

  get id_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountOut_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BondPurchaseCall__Outputs {
  _call: BondPurchaseCall;

  constructor(call: BondPurchaseCall) {
    this._call = call;
  }
}

export class ChangeKernelCall extends ethereum.Call {
  get inputs(): ChangeKernelCall__Inputs {
    return new ChangeKernelCall__Inputs(this);
  }

  get outputs(): ChangeKernelCall__Outputs {
    return new ChangeKernelCall__Outputs(this);
  }
}

export class ChangeKernelCall__Inputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }

  get newKernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeKernelCall__Outputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall extends ethereum.Call {
  get inputs(): ConfigureDependenciesCall__Inputs {
    return new ConfigureDependenciesCall__Inputs(this);
  }

  get outputs(): ConfigureDependenciesCall__Outputs {
    return new ConfigureDependenciesCall__Outputs(this);
  }
}

export class ConfigureDependenciesCall__Inputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall__Outputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }

  get dependencies(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class DeactivateCall extends ethereum.Call {
  get inputs(): DeactivateCall__Inputs {
    return new DeactivateCall__Inputs(this);
  }

  get outputs(): DeactivateCall__Outputs {
    return new DeactivateCall__Outputs(this);
  }
}

export class DeactivateCall__Inputs {
  _call: DeactivateCall;

  constructor(call: DeactivateCall) {
    this._call = call;
  }
}

export class DeactivateCall__Outputs {
  _call: DeactivateCall;

  constructor(call: DeactivateCall) {
    this._call = call;
  }
}

export class DeactivateCushionCall extends ethereum.Call {
  get inputs(): DeactivateCushionCall__Inputs {
    return new DeactivateCushionCall__Inputs(this);
  }

  get outputs(): DeactivateCushionCall__Outputs {
    return new DeactivateCushionCall__Outputs(this);
  }
}

export class DeactivateCushionCall__Inputs {
  _call: DeactivateCushionCall;

  constructor(call: DeactivateCushionCall) {
    this._call = call;
  }

  get high_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class DeactivateCushionCall__Outputs {
  _call: DeactivateCushionCall;

  constructor(call: DeactivateCushionCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OperateCall extends ethereum.Call {
  get inputs(): OperateCall__Inputs {
    return new OperateCall__Inputs(this);
  }

  get outputs(): OperateCall__Outputs {
    return new OperateCall__Outputs(this);
  }
}

export class OperateCall__Inputs {
  _call: OperateCall;

  constructor(call: OperateCall) {
    this._call = call;
  }
}

export class OperateCall__Outputs {
  _call: OperateCall;

  constructor(call: OperateCall) {
    this._call = call;
  }
}

export class RegenerateCall extends ethereum.Call {
  get inputs(): RegenerateCall__Inputs {
    return new RegenerateCall__Inputs(this);
  }

  get outputs(): RegenerateCall__Outputs {
    return new RegenerateCall__Outputs(this);
  }
}

export class RegenerateCall__Inputs {
  _call: RegenerateCall;

  constructor(call: RegenerateCall) {
    this._call = call;
  }

  get high_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class RegenerateCall__Outputs {
  _call: RegenerateCall;

  constructor(call: RegenerateCall) {
    this._call = call;
  }
}

export class SetBondContractsCall extends ethereum.Call {
  get inputs(): SetBondContractsCall__Inputs {
    return new SetBondContractsCall__Inputs(this);
  }

  get outputs(): SetBondContractsCall__Outputs {
    return new SetBondContractsCall__Outputs(this);
  }
}

export class SetBondContractsCall__Inputs {
  _call: SetBondContractsCall;

  constructor(call: SetBondContractsCall) {
    this._call = call;
  }

  get auctioneer_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get callback_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetBondContractsCall__Outputs {
  _call: SetBondContractsCall;

  constructor(call: SetBondContractsCall) {
    this._call = call;
  }
}

export class SetCushionFactorCall extends ethereum.Call {
  get inputs(): SetCushionFactorCall__Inputs {
    return new SetCushionFactorCall__Inputs(this);
  }

  get outputs(): SetCushionFactorCall__Outputs {
    return new SetCushionFactorCall__Outputs(this);
  }
}

export class SetCushionFactorCall__Inputs {
  _call: SetCushionFactorCall;

  constructor(call: SetCushionFactorCall) {
    this._call = call;
  }

  get cushionFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCushionFactorCall__Outputs {
  _call: SetCushionFactorCall;

  constructor(call: SetCushionFactorCall) {
    this._call = call;
  }
}

export class SetCushionParamsCall extends ethereum.Call {
  get inputs(): SetCushionParamsCall__Inputs {
    return new SetCushionParamsCall__Inputs(this);
  }

  get outputs(): SetCushionParamsCall__Outputs {
    return new SetCushionParamsCall__Outputs(this);
  }
}

export class SetCushionParamsCall__Inputs {
  _call: SetCushionParamsCall;

  constructor(call: SetCushionParamsCall) {
    this._call = call;
  }

  get duration_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get debtBuffer_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get depositInterval_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetCushionParamsCall__Outputs {
  _call: SetCushionParamsCall;

  constructor(call: SetCushionParamsCall) {
    this._call = call;
  }
}

export class SetRegenParamsCall extends ethereum.Call {
  get inputs(): SetRegenParamsCall__Inputs {
    return new SetRegenParamsCall__Inputs(this);
  }

  get outputs(): SetRegenParamsCall__Outputs {
    return new SetRegenParamsCall__Outputs(this);
  }
}

export class SetRegenParamsCall__Inputs {
  _call: SetRegenParamsCall;

  constructor(call: SetRegenParamsCall) {
    this._call = call;
  }

  get wait_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get threshold_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get observe_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetRegenParamsCall__Outputs {
  _call: SetRegenParamsCall;

  constructor(call: SetRegenParamsCall) {
    this._call = call;
  }
}

export class SetReserveFactorCall extends ethereum.Call {
  get inputs(): SetReserveFactorCall__Inputs {
    return new SetReserveFactorCall__Inputs(this);
  }

  get outputs(): SetReserveFactorCall__Outputs {
    return new SetReserveFactorCall__Outputs(this);
  }
}

export class SetReserveFactorCall__Inputs {
  _call: SetReserveFactorCall;

  constructor(call: SetReserveFactorCall) {
    this._call = call;
  }

  get reserveFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReserveFactorCall__Outputs {
  _call: SetReserveFactorCall;

  constructor(call: SetReserveFactorCall) {
    this._call = call;
  }
}

export class SetSpreadsCall extends ethereum.Call {
  get inputs(): SetSpreadsCall__Inputs {
    return new SetSpreadsCall__Inputs(this);
  }

  get outputs(): SetSpreadsCall__Outputs {
    return new SetSpreadsCall__Outputs(this);
  }
}

export class SetSpreadsCall__Inputs {
  _call: SetSpreadsCall;

  constructor(call: SetSpreadsCall) {
    this._call = call;
  }

  get cushionSpread_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get wallSpread_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetSpreadsCall__Outputs {
  _call: SetSpreadsCall;

  constructor(call: SetSpreadsCall) {
    this._call = call;
  }
}

export class SetThresholdFactorCall extends ethereum.Call {
  get inputs(): SetThresholdFactorCall__Inputs {
    return new SetThresholdFactorCall__Inputs(this);
  }

  get outputs(): SetThresholdFactorCall__Outputs {
    return new SetThresholdFactorCall__Outputs(this);
  }
}

export class SetThresholdFactorCall__Inputs {
  _call: SetThresholdFactorCall;

  constructor(call: SetThresholdFactorCall) {
    this._call = call;
  }

  get thresholdFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThresholdFactorCall__Outputs {
  _call: SetThresholdFactorCall;

  constructor(call: SetThresholdFactorCall) {
    this._call = call;
  }
}

export class SwapCall extends ethereum.Call {
  get inputs(): SwapCall__Inputs {
    return new SwapCall__Inputs(this);
  }

  get outputs(): SwapCall__Outputs {
    return new SwapCall__Outputs(this);
  }
}

export class SwapCall__Inputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }

  get tokenIn_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountIn_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minAmountOut_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SwapCall__Outputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }

  get amountOut(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
