// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Beat extends ethereum.Event {
  get params(): Beat__Params {
    return new Beat__Params(this);
  }
}

export class Beat__Params {
  _event: Beat;

  constructor(event: Beat) {
    this._event = event;
  }

  get timestamp_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RewardIssued extends ethereum.Event {
  get params(): RewardIssued__Params {
    return new RewardIssued__Params(this);
  }
}

export class RewardIssued__Params {
  _event: RewardIssued;

  constructor(event: RewardIssued) {
    this._event = event;
  }

  get to_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rewardAmount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RewardUpdated extends ethereum.Event {
  get params(): RewardUpdated__Params {
    return new RewardUpdated__Params(this);
  }
}

export class RewardUpdated__Params {
  _event: RewardUpdated;

  constructor(event: RewardUpdated) {
    this._event = event;
  }

  get token_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get maxRewardAmount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get auctionDuration_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OlympusHeart_v1_2__requestPermissionsResultPermissionsStruct extends ethereum.Tuple {
  get keycode(): Bytes {
    return this[0].toBytes();
  }

  get funcSelector(): Bytes {
    return this[1].toBytes();
  }
}

export class OlympusHeart_v1_2 extends ethereum.SmartContract {
  static bind(address: Address): OlympusHeart_v1_2 {
    return new OlympusHeart_v1_2("OlympusHeart_v1_2", address);
  }

  ROLES(): Address {
    let result = super.call("ROLES", "ROLES():(address)", []);

    return result[0].toAddress();
  }

  try_ROLES(): ethereum.CallResult<Address> {
    let result = super.tryCall("ROLES", "ROLES():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  active(): boolean {
    let result = super.call("active", "active():(bool)", []);

    return result[0].toBoolean();
  }

  try_active(): ethereum.CallResult<boolean> {
    let result = super.tryCall("active", "active():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auctionDuration(): BigInt {
    let result = super.call(
      "auctionDuration",
      "auctionDuration():(uint48)",
      [],
    );

    return result[0].toBigInt();
  }

  try_auctionDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "auctionDuration",
      "auctionDuration():(uint48)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  configureDependencies(): Array<Bytes> {
    let result = super.call(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      [],
    );

    return result[0].toBytesArray();
  }

  try_configureDependencies(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  currentReward(): BigInt {
    let result = super.call("currentReward", "currentReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentReward",
      "currentReward():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  frequency(): BigInt {
    let result = super.call("frequency", "frequency():(uint48)", []);

    return result[0].toBigInt();
  }

  try_frequency(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("frequency", "frequency():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isActive(): boolean {
    let result = super.call("isActive", "isActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isActive", "isActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kernel(): Address {
    let result = super.call("kernel", "kernel():(address)", []);

    return result[0].toAddress();
  }

  try_kernel(): ethereum.CallResult<Address> {
    let result = super.tryCall("kernel", "kernel():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lastBeat(): BigInt {
    let result = super.call("lastBeat", "lastBeat():(uint48)", []);

    return result[0].toBigInt();
  }

  try_lastBeat(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastBeat", "lastBeat():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxReward(): BigInt {
    let result = super.call("maxReward", "maxReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxReward", "maxReward():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestPermissions(): Array<OlympusHeart_v1_2__requestPermissionsResultPermissionsStruct> {
    let result = super.call(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      [],
    );

    return result[0].toTupleArray<OlympusHeart_v1_2__requestPermissionsResultPermissionsStruct>();
  }

  try_requestPermissions(): ethereum.CallResult<
    Array<OlympusHeart_v1_2__requestPermissionsResultPermissionsStruct>
  > {
    let result = super.tryCall(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<OlympusHeart_v1_2__requestPermissionsResultPermissionsStruct>(),
    );
  }

  rewardToken(): Address {
    let result = super.call("rewardToken", "rewardToken():(address)", []);

    return result[0].toAddress();
  }

  try_rewardToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("rewardToken", "rewardToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get kernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get operator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rewardToken_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get maxReward_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get auctionDuration_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateCall extends ethereum.Call {
  get inputs(): ActivateCall__Inputs {
    return new ActivateCall__Inputs(this);
  }

  get outputs(): ActivateCall__Outputs {
    return new ActivateCall__Outputs(this);
  }
}

export class ActivateCall__Inputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class ActivateCall__Outputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class BeatCall extends ethereum.Call {
  get inputs(): BeatCall__Inputs {
    return new BeatCall__Inputs(this);
  }

  get outputs(): BeatCall__Outputs {
    return new BeatCall__Outputs(this);
  }
}

export class BeatCall__Inputs {
  _call: BeatCall;

  constructor(call: BeatCall) {
    this._call = call;
  }
}

export class BeatCall__Outputs {
  _call: BeatCall;

  constructor(call: BeatCall) {
    this._call = call;
  }
}

export class ChangeKernelCall extends ethereum.Call {
  get inputs(): ChangeKernelCall__Inputs {
    return new ChangeKernelCall__Inputs(this);
  }

  get outputs(): ChangeKernelCall__Outputs {
    return new ChangeKernelCall__Outputs(this);
  }
}

export class ChangeKernelCall__Inputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }

  get newKernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeKernelCall__Outputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall extends ethereum.Call {
  get inputs(): ConfigureDependenciesCall__Inputs {
    return new ConfigureDependenciesCall__Inputs(this);
  }

  get outputs(): ConfigureDependenciesCall__Outputs {
    return new ConfigureDependenciesCall__Outputs(this);
  }
}

export class ConfigureDependenciesCall__Inputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall__Outputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }

  get dependencies(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class DeactivateCall extends ethereum.Call {
  get inputs(): DeactivateCall__Inputs {
    return new DeactivateCall__Inputs(this);
  }

  get outputs(): DeactivateCall__Outputs {
    return new DeactivateCall__Outputs(this);
  }
}

export class DeactivateCall__Inputs {
  _call: DeactivateCall;

  constructor(call: DeactivateCall) {
    this._call = call;
  }
}

export class DeactivateCall__Outputs {
  _call: DeactivateCall;

  constructor(call: DeactivateCall) {
    this._call = call;
  }
}

export class ResetBeatCall extends ethereum.Call {
  get inputs(): ResetBeatCall__Inputs {
    return new ResetBeatCall__Inputs(this);
  }

  get outputs(): ResetBeatCall__Outputs {
    return new ResetBeatCall__Outputs(this);
  }
}

export class ResetBeatCall__Inputs {
  _call: ResetBeatCall;

  constructor(call: ResetBeatCall) {
    this._call = call;
  }
}

export class ResetBeatCall__Outputs {
  _call: ResetBeatCall;

  constructor(call: ResetBeatCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get operator_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetRewardAuctionParamsCall extends ethereum.Call {
  get inputs(): SetRewardAuctionParamsCall__Inputs {
    return new SetRewardAuctionParamsCall__Inputs(this);
  }

  get outputs(): SetRewardAuctionParamsCall__Outputs {
    return new SetRewardAuctionParamsCall__Outputs(this);
  }
}

export class SetRewardAuctionParamsCall__Inputs {
  _call: SetRewardAuctionParamsCall;

  constructor(call: SetRewardAuctionParamsCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get maxReward_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get auctionDuration_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetRewardAuctionParamsCall__Outputs {
  _call: SetRewardAuctionParamsCall;

  constructor(call: SetRewardAuctionParamsCall) {
    this._call = call;
  }
}

export class WithdrawUnspentRewardsCall extends ethereum.Call {
  get inputs(): WithdrawUnspentRewardsCall__Inputs {
    return new WithdrawUnspentRewardsCall__Inputs(this);
  }

  get outputs(): WithdrawUnspentRewardsCall__Outputs {
    return new WithdrawUnspentRewardsCall__Outputs(this);
  }
}

export class WithdrawUnspentRewardsCall__Inputs {
  _call: WithdrawUnspentRewardsCall;

  constructor(call: WithdrawUnspentRewardsCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawUnspentRewardsCall__Outputs {
  _call: WithdrawUnspentRewardsCall;

  constructor(call: WithdrawUnspentRewardsCall) {
    this._call = call;
  }
}
